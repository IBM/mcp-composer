import{_ as n,c as a,o as l,a2 as p}from"./chunks/framework.CulRYwFH.js";const i=JSON.parse('{"title":"Middleware Examples","description":"","frontmatter":{},"headers":[],"relativePath":"examples/middleware-examples.md","filePath":"examples/middleware-examples.md"}'),o={name:"examples/middleware-examples.md"};function e(t,s,c,r,F,D){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="middleware-examples" tabindex="-1">Middleware Examples <a class="header-anchor" href="#middleware-examples" aria-label="Permalink to &quot;Middleware Examples&quot;">​</a></h1><p>This document provides practical examples of how to use middleware in MCP Composer. Each example includes complete, runnable code that demonstrates real-world usage patterns.</p><h2 id="example-1-logging-and-monitoring-middleware" tabindex="-1">Example 1: Logging and Monitoring Middleware <a class="header-anchor" href="#example-1-logging-and-monitoring-middleware" aria-label="Permalink to &quot;Example 1: Logging and Monitoring Middleware&quot;">​</a></h2><p>A comprehensive logging middleware that tracks performance metrics and provides observability.</p><h3 id="complete-example" tabindex="-1">Complete Example <a class="header-anchor" href="#complete-example" aria-label="Permalink to &quot;Complete Example&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> time</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> asyncio</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> dataclasses </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> dataclass</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> field</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> typing </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Any</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> FastMCP</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Middleware</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> CallNext</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">core</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> LoggerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> LoggerFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_logger</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">dataclass</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Metrics</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    total_calls</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">    successful_calls</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">    failed_calls</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">    total_duration</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0.0</span></span>
<span class="line"><span style="color:#BABED8;">    call_durations</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> list</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> field</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">default_factory</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">list</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> LoggingMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    Comprehensive logging and monitoring middleware.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    Features:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Request/response logging</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Performance metrics</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Error tracking</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Custom metrics collection</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 log_arguments</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 log_responses</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> False,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 collect_metrics</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> True):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">log_arguments</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> log_arguments</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">log_responses</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> log_responses</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">collect_metrics</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> collect_metrics</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> Metrics</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">lock</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CallNext</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        tool_name </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;unknown&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        arguments </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">arguments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {})</span></span>
<span class="line"><span style="color:#BABED8;">        start_time </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Log request</span></span>
<span class="line"><span style="color:#BABED8;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;🔄 Starting tool call: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">log_arguments</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;📥 Arguments: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">arguments</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Execute the tool</span></span>
<span class="line"><span style="color:#BABED8;">            result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Calculate duration</span></span>
<span class="line"><span style="color:#BABED8;">            duration </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> start_time</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Log success</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;✅ Tool call completed: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> in </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">duration</span><span style="color:#C792EA;">:.3f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">s&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">log_responses</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;📤 Response: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">result</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Update metrics</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">collect_metrics</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_update_metrics</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">duration</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> success</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        except</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;font-style:italic;"> as</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Calculate duration</span></span>
<span class="line"><span style="color:#BABED8;">            duration </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> start_time</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Log error</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;❌ Tool call failed: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> after </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">duration</span><span style="color:#C792EA;">:.3f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">s - </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">e</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Update metrics</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">collect_metrics</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_update_metrics</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">duration</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> success</span><span style="color:#89DDFF;">=False)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Re-raise the exception</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            raise</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _update_metrics</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> duration</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> success</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Thread-safe metrics update.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        async</span><span style="color:#89DDFF;font-style:italic;"> with</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">lock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#89DDFF;"> +=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_duration</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> duration</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">call_durations</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">duration</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> success</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">successful_calls</span><span style="color:#89DDFF;"> +=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failed_calls</span><span style="color:#89DDFF;"> +=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Keep only last 1000 durations to prevent memory bloat</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">call_durations</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 1000</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">call_durations</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">call_durations</span><span style="color:#89DDFF;">[-</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">:]</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> get_metrics</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Get current metrics snapshot.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C792EA;">        async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _get</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            async</span><span style="color:#89DDFF;font-style:italic;"> with</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">lock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                avg_duration </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_duration</span><span style="color:#89DDFF;"> /</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                              if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#F78C6C;"> 0.0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">                </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">total_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">successful_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">successful_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">failed_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failed_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">success_rate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">successful_calls</span><span style="color:#89DDFF;"> /</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                                   if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#F78C6C;"> 0.0</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">average_duration</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> avg_duration</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">total_duration</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_duration</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Run the async function in the current event loop</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            loop </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_event_loop</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> loop</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is_running</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                # If we&#39;re in an async context, we need to handle this differently</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                # For simplicity, we&#39;ll return a basic dict</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">total_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">successful_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">successful_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                    &quot;</span><span style="color:#C3E88D;">failed_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failed_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                return</span><span style="color:#BABED8;"> loop</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run_until_complete</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">_get</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        except</span><span style="color:#FFCB6B;"> RuntimeError</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # No event loop, return basic metrics</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">total_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">total_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">successful_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">successful_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">failed_calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failed_calls</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Example usage</span></span>
<span class="line"><span style="color:#BABED8;">app </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> FastMCP</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Logging Demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Add the logging middleware</span></span>
<span class="line"><span style="color:#BABED8;">logging_middleware </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> LoggingMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    log_arguments</span><span style="color:#89DDFF;">=True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    log_responses</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    collect_metrics</span><span style="color:#89DDFF;">=True</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">logging_middleware</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> slow_operation</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Simulate a slow operation.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # Simulate work</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">processed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> fast_operation</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Simulate a fast operation.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">processed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> failing_operation</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Simulate a failing operation.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    raise</span><span style="color:#FFCB6B;"> ValueError</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Simulated error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br></div></div><h2 id="example-2-request-transformation-middleware" tabindex="-1">Example 2: Request Transformation Middleware <a class="header-anchor" href="#example-2-request-transformation-middleware" aria-label="Permalink to &quot;Example 2: Request Transformation Middleware&quot;">​</a></h2><p>A middleware that transforms requests and responses, useful for API versioning, data validation, and format conversion.</p><h3 id="complete-example-1" tabindex="-1">Complete Example <a class="header-anchor" href="#complete-example-1" aria-label="Permalink to &quot;Complete Example&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> json</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> typing </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Optional</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> FastMCP</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Middleware</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> CallNext</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">core</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> LoggerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> LoggerFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_logger</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> RequestTransformationMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    Transforms requests and responses for API compatibility.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    Features:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Request validation and sanitization</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Response formatting</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - API versioning support</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Data type conversion</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 validate_requests</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 format_responses</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 api_version</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">v1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 required_fields</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> list</span><span style="color:#89DDFF;">]]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">validate_requests</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> validate_requests</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">format_responses</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> format_responses</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">api_version</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> api_version</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">required_fields</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> required_fields </span><span style="color:#89DDFF;">or</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CallNext</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        tool_name </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;unknown&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        arguments </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">arguments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {})</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Transform request</span></span>
<span class="line"><span style="color:#BABED8;">        transformed_args </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_transform_request</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> arguments</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        original_args </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span></span>
<span class="line"><span style="color:#BABED8;">        context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> transformed_args</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Execute the tool</span></span>
<span class="line"><span style="color:#BABED8;">            result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Transform response</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">format_responses</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_transform_response</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        finally</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Restore original arguments</span></span>
<span class="line"><span style="color:#BABED8;">            context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> original_args</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _transform_request</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> tool_name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> arguments</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Transform and validate the request arguments.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#BABED8;">        transformed </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arguments</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Add API version if not present</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">api_version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> not</span><span style="color:#89DDFF;"> in</span><span style="color:#BABED8;"> transformed</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            transformed</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">api_version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">api_version</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Validate required fields</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">validate_requests</span><span style="color:#89DDFF;"> and</span><span style="color:#BABED8;"> tool_name </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">required_fields</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            missing_fields </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            for</span><span style="color:#BABED8;"> field </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">required_fields</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">tool_name</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                if</span><span style="color:#BABED8;"> field </span><span style="color:#89DDFF;">not</span><span style="color:#89DDFF;"> in</span><span style="color:#BABED8;"> transformed</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                    missing_fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">field</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> missing_fields</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                raise</span><span style="color:#FFCB6B;"> ValueError</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Missing required fields: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">missing_fields</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Sanitize string inputs</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#BABED8;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> transformed</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">items</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#82AAFF;"> isinstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">                transformed</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">key</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">strip</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Convert data types based on tool</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> tool_name </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">process_user_data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> in</span><span style="color:#BABED8;"> transformed </span><span style="color:#89DDFF;">and</span><span style="color:#82AAFF;"> isinstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">transformed</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                    transformed</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">transformed</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                except</span><span style="color:#FFCB6B;"> ValueError</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                    raise</span><span style="color:#FFCB6B;"> ValueError</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Age must be a valid integer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#BABED8;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Transformed request for </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">transformed</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> transformed</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _transform_response</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> tool_name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> result</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Transform the response.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#89DDFF;"> not</span><span style="color:#82AAFF;"> isinstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">result</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#BABED8;">        transformed </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Add metadata</span></span>
<span class="line"><span style="color:#BABED8;">        transformed</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_metadata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">api_version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">api_version</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">tool_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> tool_name</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">timestamp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">2024-01-01T00:00:00Z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;">  # In real app, use actual timestamp</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Format specific responses</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> tool_name </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">process_user_data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> and</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> in</span><span style="color:#BABED8;"> transformed</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            user </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> transformed</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#82AAFF;"> isinstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">user</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                # Ensure consistent user object structure</span></span>
<span class="line"><span style="color:#BABED8;">                user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setdefault</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> None)</span></span>
<span class="line"><span style="color:#BABED8;">                user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setdefault</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">                user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setdefault</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">email</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">                user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setdefault</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">created_at</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> None)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#BABED8;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Transformed response for </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">transformed</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> transformed</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Example usage</span></span>
<span class="line"><span style="color:#BABED8;">app </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> FastMCP</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Transformation Demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Add the transformation middleware</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    RequestTransformationMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        validate_requests</span><span style="color:#89DDFF;">=True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        format_responses</span><span style="color:#89DDFF;">=True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        api_version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">v2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        required_fields</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">process_user_data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">email</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">update_user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> process_user_data</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> email</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Process user data with validation.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">email</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> email</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">age</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> age </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;"> None,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">processed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> True</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> update_user</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">user_id</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Update user information.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> user_id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">updated_fields</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> list</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#89DDFF;">()),</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">User updated successfully</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> simple_operation</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Simple operation without special requirements.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br></div></div><h2 id="example-3-circuit-breaker-with-health-check" tabindex="-1">Example 3: Circuit Breaker with Health Check <a class="header-anchor" href="#example-3-circuit-breaker-with-health-check" aria-label="Permalink to &quot;Example 3: Circuit Breaker with Health Check&quot;">​</a></h2><p>A practical example showing how to implement a circuit breaker with health checks and graceful degradation.</p><h3 id="complete-example-2" tabindex="-1">Complete Example <a class="header-anchor" href="#complete-example-2" aria-label="Permalink to &quot;Complete Example&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> asyncio</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> time</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> dataclasses </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> dataclass</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> field</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> typing </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Set</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Optional</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> FastMCP</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Middleware</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> CallNext</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">exceptions </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> ToolError</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">core</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> LoggerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> LoggerFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_logger</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">dataclass</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> CircuitState</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    state</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">CLOSED</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;">  # CLOSED, OPEN, HALF_OPEN</span></span>
<span class="line"><span style="color:#BABED8;">    failures</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> list</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> field</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">default_factory</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">list</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    opened_at</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">float</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None</span></span>
<span class="line"><span style="color:#BABED8;">    last_success</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">float</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None</span></span>
<span class="line"><span style="color:#BABED8;">    health_check_count</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> AdvancedCircuitBreakerMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    Advanced circuit breaker with health checks and graceful degradation.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    Features:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Configurable failure thresholds</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Health check probes</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Graceful degradation with fallback responses</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    - Detailed monitoring</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 failure_threshold</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 open_timeout</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 30.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 health_check_interval</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 10.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 health_check_timeout</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 5.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 exempt_tools</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">Set</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">]]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 fallback_responses</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">]]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failure_threshold</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> failure_threshold</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">open_timeout</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> open_timeout</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">health_check_interval</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> health_check_interval</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">health_check_timeout</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> health_check_timeout</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">exempt_tools</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> exempt_tools </span><span style="color:#89DDFF;">or</span><span style="color:#FFCB6B;"> set</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">fallback_responses</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> fallback_responses </span><span style="color:#89DDFF;">or</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_circuits</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> CircuitState</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_lock</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Task</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CallNext</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        tool_name </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;unknown&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Skip circuit breaker for exempt tools</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> tool_name </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">exempt_tools</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Get or create circuit state</span></span>
<span class="line"><span style="color:#BABED8;">        circuit </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_get_circuit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Check circuit state</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">OPEN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_should_attempt_reset</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">circuit</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">                circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">HALF_OPEN</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Circuit </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> moved to HALF_OPEN&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                # Return fallback response or raise error</span></span>
<span class="line"><span style="color:#BABED8;">                fallback </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">fallback_responses</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                if</span><span style="color:#BABED8;"> fallback</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Circuit </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> OPEN, returning fallback response&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                    return</span><span style="color:#BABED8;"> fallback</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                    raise</span><span style="color:#82AAFF;"> ToolError</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Circuit breaker OPEN for </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">. Try again later.&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Execute the call</span></span>
<span class="line"><span style="color:#BABED8;">        start_time </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Record success</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_record_success</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> circuit</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> start_time</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        except</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;font-style:italic;"> as</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Record failure</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_record_failure</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> circuit</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> start_time</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">e</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            raise</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _get_circuit</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> tool_name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> CircuitState</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Get or create circuit state for a tool.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        async</span><span style="color:#89DDFF;font-style:italic;"> with</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_lock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> tool_name </span><span style="color:#89DDFF;">not</span><span style="color:#89DDFF;"> in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_circuits</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_circuits</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">tool_name</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> CircuitState</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_circuits</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">tool_name</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> _should_attempt_reset</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> circuit</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CircuitState</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Check if circuit should attempt to reset.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">opened_at</span><span style="color:#89DDFF;"> is</span><span style="color:#89DDFF;"> None:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;"> False</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">opened_at</span><span style="color:#89DDFF;"> &gt;=</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">open_timeout</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _record_success</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> tool_name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> circuit</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CircuitState</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> start_time</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Record a successful call.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        async</span><span style="color:#89DDFF;font-style:italic;"> with</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_lock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">CLOSED</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">last_success</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">health_check_count</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#BABED8;">            duration </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> start_time</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Circuit </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> call succeeded in </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">duration</span><span style="color:#C792EA;">:.3f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">s&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _record_failure</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> tool_name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> circuit</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CircuitState</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                            start_time</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> error</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Record a failed call.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        async</span><span style="color:#89DDFF;font-style:italic;"> with</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_lock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Clean old failures</span></span>
<span class="line"><span style="color:#BABED8;">            cutoff </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 60.0</span><span style="color:#676E95;font-style:italic;">  # 1 minute window</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">f </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> f </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;font-style:italic;"> if</span><span style="color:#BABED8;"> f </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> cutoff</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # Check if circuit should open</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> &gt;=</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failure_threshold</span><span style="color:#89DDFF;"> and</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">CLOSED</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">OPEN</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">                circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">opened_at</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Circuit </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> opened after </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;">)</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> failures&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#BABED8;">            duration </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> start_time</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Circuit </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> call failed in </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">duration</span><span style="color:#C792EA;">:.3f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">s: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">error</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> start_health_checks</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Start periodic health checks.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span><span style="color:#89DDFF;"> is</span><span style="color:#89DDFF;"> None:</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_health_check_loop</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> stop_health_checks</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Stop health checks.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cancel</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            except</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CancelledError</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                pass</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_health_check_task</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> None</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _health_check_loop</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Periodic health check loop.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        while</span><span style="color:#89DDFF;"> True:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">health_check_interval</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_perform_health_checks</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            except</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CancelledError</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                break</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            except</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;font-style:italic;"> as</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Health check error: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">e</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _perform_health_checks</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Perform health checks for all circuits.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#BABED8;"> tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> circuit </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_circuits</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">items</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> ==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">OPEN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_check_circuit_health</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> circuit</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> _check_circuit_health</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> tool_name</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> circuit</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CircuitState</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Check health of a specific circuit.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # This would typically call a health check endpoint</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # For this example, we&#39;ll simulate a health check</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # Simulate health check</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # If health check passes, move to HALF_OPEN</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">HALF_OPEN</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">            circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">health_check_count</span><span style="color:#89DDFF;"> +=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Health check passed for </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">, moved to HALF_OPEN&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        except</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;font-style:italic;"> as</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Health check failed for </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">e</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> get_circuit_status</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Dict</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">]]:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Get status of all circuits.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#BABED8;">        status </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#BABED8;"> tool_name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> circuit </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">_circuits</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">items</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">            status</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">tool_name</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">state</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">failure_count</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">failures</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">last_success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">last_success</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">opened_at</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">opened_at</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">health_check_count</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> circuit</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">health_check_count</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> status</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Example usage</span></span>
<span class="line"><span style="color:#BABED8;">app </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> FastMCP</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Circuit Breaker Demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Add circuit breaker middleware</span></span>
<span class="line"><span style="color:#BABED8;">circuit_breaker </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> AdvancedCircuitBreakerMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    failure_threshold</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    open_timeout</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    health_check_interval</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    exempt_tools</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">health_check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    fallback_responses</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">unreliable_service</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">degraded</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">Service temporarily unavailable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#C3E88D;">external_api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">fallback</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">cached_data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">circuit_breaker</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> reliable_service</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">A reliable service that rarely fails.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> unreliable_service</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">An unreliable service that fails frequently.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    import</span><span style="color:#BABED8;"> random</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#BABED8;"> random</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F78C6C;"> 0.7</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">  # 70% failure rate</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        raise</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Service temporarily unavailable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> external_api</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">External API that might be slow or fail.</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    import</span><span style="color:#BABED8;"> random</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#BABED8;"> random</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F78C6C;"> 0.5</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">  # 50% failure rate</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">  # Simulate timeout</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        raise</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">External API timeout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    await</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">external_data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tool</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> health_check</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#FFCB6B;"> dict</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    &quot;&quot;&quot;</span><span style="color:#676E95;font-style:italic;">Health check endpoint (exempt from circuit breaker).</span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">healthy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">timestamp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Start health checks when the app starts</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_startup</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> startup</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    await</span><span style="color:#BABED8;"> circuit_breaker</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_health_checks</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_shutdown</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> shutdown</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    await</span><span style="color:#BABED8;"> circuit_breaker</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stop_health_checks</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br></div></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>These examples demonstrate three key middleware patterns:</p><ol><li><strong>Logging and Monitoring</strong>: Provides observability and metrics collection</li><li><strong>Request Transformation</strong>: Handles data validation, sanitization, and format conversion</li><li><strong>Circuit Breaker</strong>: Implements fault tolerance and graceful degradation</li></ol><p>Each example includes:</p><ul><li>Complete, runnable code</li><li>Comprehensive error handling</li><li>Configuration options</li><li>Testing instructions</li><li>Best practices</li></ul><p>These patterns can be combined and customized to build robust, observable, and fault-tolerant MCP applications.</p>`,20)]))}const u=n(o,[["render",e]]);export{i as __pageData,u as default};
