import{_ as a,c as n,o as e,a2 as l}from"./chunks/framework.CulRYwFH.js";const h=JSON.parse('{"title":"üß© MCP Composer + Langflow Installation Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guide/langflow-integration.md","filePath":"guide/langflow-integration.md"}'),o={name:"guide/langflow-integration.md"};function t(p,s,r,i,c,d){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="üß©-mcp-composer-langflow-installation-guide" tabindex="-1">üß© MCP Composer + Langflow Installation Guide <a class="header-anchor" href="#üß©-mcp-composer-langflow-installation-guide" aria-label="Permalink to &quot;üß© MCP Composer + Langflow Installation Guide&quot;">‚Äã</a></h1><blockquote><p>‚ö†Ô∏è Until MCP Composer is published to PyPI or open-sourced, you must install MCP Composer and Langflow separately.</p></blockquote><hr><h2 id="üöÄ-mcp-composer-install-as-a-tool" tabindex="-1">üöÄ MCP Composer: Install as a Tool <a class="header-anchor" href="#üöÄ-mcp-composer-install-as-a-tool" aria-label="Permalink to &quot;üöÄ MCP Composer: Install as a Tool&quot;">‚Äã</a></h2><ol><li><strong>Clone the MCP Composer Repository</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">   git</span><span style="color:#C3E88D;"> clone</span><span style="color:#C3E88D;"> https://github.com/ibm/mcp-composer.git</span></span>
<span class="line"><span style="color:#82AAFF;">   cd</span><span style="color:#C3E88D;"> mcp-composer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li><strong>Install using uv</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">uv</span><span style="color:#C3E88D;"> sync</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>If you hit a uv sync error: Failed to parse <code>uv.lock</code> you‚Äôll need to delete the uv.lock file and rebuild it with <code>uv lock --upgrade</code></p><ol start="3"><li><strong>Install MCP Composer as a UV tool</strong></li></ol><p>Update the path below based on your local install location:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">uv</span><span style="color:#C3E88D;"> tool</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> /Users/charna.parkey/code/mcp-composer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Export the path provided by that tool install</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#BABED8;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/Users/charna.parkey/.local/bin:</span><span style="color:#BABED8;">$PATH</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li><strong>Verify installation</strong></li></ol><p>Use the CLI to see if mcp composer can successfully be booted via uvx</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">uvx</span><span style="color:#C3E88D;"> mcp-composer</span><span style="color:#C3E88D;"> --mode</span><span style="color:#C3E88D;"> sse</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You should see mcp composer successful boot up with an info message that says:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">INFO:</span><span style="color:#C3E88D;">     Uvicorn</span><span style="color:#C3E88D;"> running</span><span style="color:#C3E88D;"> on</span><span style="color:#C3E88D;"> http://0.0.0.0:9000</span><span style="color:#BABED8;"> (Press </span><span style="color:#C3E88D;">CTRL+C</span><span style="color:#C3E88D;"> to</span><span style="color:#C3E88D;"> quit</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>‚ö†Ô∏è Stop the MCP Composer before continuing You can&#39;t run two MCP Composers on the same port during the rest of this demo.</p><h2 id="üåê-langflow-installation-setup" tabindex="-1">üåê Langflow Installation &amp; Setup <a class="header-anchor" href="#üåê-langflow-installation-setup" aria-label="Permalink to &quot;üåê Langflow Installation &amp; Setup&quot;">‚Äã</a></h2><ol><li><strong>Clone the main branch</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> clone</span><span style="color:#C3E88D;"> https://github.com/langflow-ai/langflow</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#C3E88D;"> langflow</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li><strong>Install Langflow</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">uv</span><span style="color:#C3E88D;"> pip</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> langflow</span><span style="color:#C3E88D;"> -U</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Set the feature flag as an environment variable</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#BABED8;"> LANGFLOW_FEATURE_MCP_COMPOSER</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">true</span></span>
<span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#C3E88D;"> build_frontend</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="3"><li><strong>Start Langflow</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">uv</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> langflow</span><span style="color:#C3E88D;"> run</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li><strong>Open Langflow UI</strong></li></ol><p>Navigate to: <a href="http://127.0.0.1:7860" target="_blank" rel="noreferrer">http://127.0.0.1:7860</a></p><h3 id="üîê-add-auth-to-mcp-server-in-langflow" tabindex="-1">üîê Add Auth to MCP Server in Langflow <a class="header-anchor" href="#üîê-add-auth-to-mcp-server-in-langflow" aria-label="Permalink to &quot;üîê Add Auth to MCP Server in Langflow&quot;">‚Äã</a></h3><p>In Langflow, ensure you have a working flow (e.g., Simple Agent with OpenAI credentials).</p><ol><li><strong>Navigate to Project &gt; MCP Server &gt; Click Edit Auth and enter:</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">OAUTH_HOST</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">localhost</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_PORT</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">9000</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_SERVER_URL</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">http://localhost:9000</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_CALLBACK_PATH</span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_CLIENT_ID</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">your-client-id</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_CLIENT_SECRET</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">your-client-secret</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_AUTH_URL</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">https://preprod.login.w3.ibm.com/v1.0/endpoint/default/authorize</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_TOKEN_URL</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">https://preprod.login.w3.ibm.com/v1.0/endpoint/default/token</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_MCP_SCOPE</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">user</span></span>
<span class="line"><span style="color:#BABED8;">OAUTH_PROVIDER_SCOPE</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">openid</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="2"><li><strong>Click Save Authentication</strong></li></ol><p>‚úÖ You can now use this MCP Server inside Langflow in new flows or install it into:</p><ul><li>Cursor</li><li>Claude</li><li>Windsurf</li></ul><h2 id="üß†-claude-integration" tabindex="-1">üß† Claude Integration <a class="header-anchor" href="#üß†-claude-integration" aria-label="Permalink to &quot;üß† Claude Integration&quot;">‚Äã</a></h2><ol><li><p>Go to the Auto Install tab inside Langflow, click + next to Claude</p></li><li><p>Restart Claude. On opening, you should be redirected to the OAuth flow.</p></li></ol><p>If Claude fails to start due to uvx path issues, update the configuration JSON to:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/Users/charna.parkey/.langflow/uv/uvx</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="üõ†Ô∏è-using-mcp-composer-server-via-langflow-canvas" tabindex="-1">üõ†Ô∏è Using MCP Composer Server via Langflow Canvas <a class="header-anchor" href="#üõ†Ô∏è-using-mcp-composer-server-via-langflow-canvas" aria-label="Permalink to &quot;üõ†Ô∏è Using MCP Composer Server via Langflow Canvas&quot;">‚Äã</a></h2><ul><li>Copy the JSON from the MCP Server tab of the flow you want to connect</li><li>Create a new project and new simple agent flow from a template</li><li>Add a MCP Tool from the side bar onto the canvas</li><li>Click Add MCP Server</li><li>Paste the JSON config and click add server</li><li>This should redirect you to a successful auth flow</li><li>Navigate back to Langflow and turn on tool mode for your MCP Tool</li><li>Connect the toolset to the agent and click Playground to chat with the agent and have it use it‚Äôs tools</li><li>Similarly, you now have a MCP Composer MCP Server running on port 9000 you&#39;ll need to delete the server from Langflow if you want this to stop running locally to go back to claude or try the next part</li></ul><p>üõë If you&#39;re done, remove the MCP Composer server from Langflow to stop running on port 9000</p><h2 id="üåç-connecting-other-mcp-servers-via-mcp-composer" tabindex="-1">üåç Connecting Other MCP Servers via MCP Composer <a class="header-anchor" href="#üåç-connecting-other-mcp-servers-via-mcp-composer" aria-label="Permalink to &quot;üåç Connecting Other MCP Servers via MCP Composer&quot;">‚Äã</a></h2><ul><li>Any MCP Servers that are in the config file of the MCP Composer will be made available when connecting MCP Composer to Langflow, you do not need to have the langflow servers passed via the json snippet and you do not need to pass the oath via the environment variable if it is configured this way <ul><li>To do this you‚Äôll need to create a config.json file in the mcp-composer/config folder</li></ul></li><li>Add mcp server configs to the config.json file in the config directory of the MCP Composer</li><li>Create a .env file in the mcp-composer directory and add the auth environment variables above</li><li>Then add the MCP Server of MCP Composer to Langflow</li><li>When you add the MCP Server either in the canvas or in the global settings</li><li>you can now use the MCP Tools in the canvas and reduced to the set of tools relevant to that flow</li></ul>`,47)]))}const m=a(o,[["render",t]]);export{h as __pageData,m as default};
