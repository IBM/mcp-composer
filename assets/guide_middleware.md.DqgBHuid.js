import{_ as n,c as a,o as l,a2 as e}from"./chunks/framework.CulRYwFH.js";const D=JSON.parse('{"title":"Middleware Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guide/middleware.md","filePath":"guide/middleware.md"}'),p={name:"guide/middleware.md"};function o(t,s,r,c,i,y){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="middleware-guide" tabindex="-1">Middleware Guide <a class="header-anchor" href="#middleware-guide" aria-label="Permalink to &quot;Middleware Guide&quot;">​</a></h1><p>Middleware in MCP Composer provides a powerful way to intercept, modify, and enhance tool calls, resource operations, and other MCP interactions. This guide covers how to create custom middleware and describes the available built-in middleware components.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Middleware follows a chain-of-responsibility pattern where each middleware can:</p><ul><li>Process requests before they reach the target handler</li><li>Modify responses after they&#39;re generated</li><li>Add cross-cutting concerns like logging, authentication, rate limiting, etc.</li><li>Handle errors and exceptions</li></ul><h2 id="creating-custom-middleware" tabindex="-1">Creating Custom Middleware <a class="header-anchor" href="#creating-custom-middleware" aria-label="Permalink to &quot;Creating Custom Middleware&quot;">​</a></h2><h3 id="basic-middleware-structure" tabindex="-1">Basic Middleware Structure <a class="header-anchor" href="#basic-middleware-structure" aria-label="Permalink to &quot;Basic Middleware Structure&quot;">​</a></h3><p>All middleware must inherit from the <code>Middleware</code> base class and implement the appropriate hook methods:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Middleware</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> CallNext</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> typing </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Any</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> MyCustomMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> config_param</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> str</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#FFCB6B;">        super</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">config_param</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> config_param</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#F07178;font-style:italic;">        self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        context</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> MiddlewareContext</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        call_next</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> CallNext</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span><span style="color:#89DDFF;"> -&gt;</span><span style="color:#BABED8;"> Any</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Pre-processing logic</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Before calling tool: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Call the next middleware or handler</span></span>
<span class="line"><span style="color:#BABED8;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Post-processing logic</span></span>
<span class="line"><span style="color:#82AAFF;">        print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;After calling tool: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> result</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="available-hook-methods" tabindex="-1">Available Hook Methods <a class="header-anchor" href="#available-hook-methods" aria-label="Permalink to &quot;Available Hook Methods&quot;">​</a></h3><p>Middleware can implement these hook methods:</p><h4 id="on-call-tool-context-call-next" tabindex="-1"><code>on_call_tool(context, call_next)</code> <a class="header-anchor" href="#on-call-tool-context-call-next" aria-label="Permalink to &quot;\`on_call_tool(context, call_next)\`&quot;">​</a></h4><p>Called before and after tool execution.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Pre-processing</span></span>
<span class="line"><span style="color:#BABED8;">    tool_name </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;unknown&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    arguments </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">arguments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {})</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Modify arguments if needed</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # context.message.arguments = modified_arguments</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Call next middleware/handler</span></span>
<span class="line"><span style="color:#BABED8;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Post-processing</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Modify result if needed</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> result</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="on-list-tools-context-call-next" tabindex="-1"><code>on_list_tools(context, call_next)</code> <a class="header-anchor" href="#on-list-tools-context-call-next" aria-label="Permalink to &quot;\`on_list_tools(context, call_next)\`&quot;">​</a></h4><p>Called when listing available tools.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_list_tools</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Modify tool list if needed</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # for tool in result.tools:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    #     tool.description = &quot;Modified description&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> result</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="on-read-resource-context-call-next" tabindex="-1"><code>on_read_resource(context, call_next)</code> <a class="header-anchor" href="#on-read-resource-context-call-next" aria-label="Permalink to &quot;\`on_read_resource(context, call_next)\`&quot;">​</a></h4><p>Called when reading resources.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_read_resource</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Modify resource content if needed</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> result</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="adding-middleware-to-your-application" tabindex="-1">Adding Middleware to Your Application <a class="header-anchor" href="#adding-middleware-to-your-application" aria-label="Permalink to &quot;Adding Middleware to Your Application&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> fastmcp </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> FastMCP</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> MyCustomMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> FastMCP</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Add middleware</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">MyCustomMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">config_param</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Add multiple middleware (order matters)</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">AnotherMiddleware</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">YetAnotherMiddleware</span><span style="color:#89DDFF;">())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="built-in-middleware" tabindex="-1">Built-in Middleware <a class="header-anchor" href="#built-in-middleware" aria-label="Permalink to &quot;Built-in Middleware&quot;">​</a></h2><p>MCP Composer provides several built-in middleware components for common use cases.</p><h3 id="circuit-breaker-middleware" tabindex="-1">Circuit Breaker Middleware <a class="header-anchor" href="#circuit-breaker-middleware" aria-label="Permalink to &quot;Circuit Breaker Middleware&quot;">​</a></h3><p>Prevents cascading failures by temporarily stopping calls to failing services.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> CircuitBreakerMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    CircuitBreakerMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        failure_threshold</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">      # Number of failures to trip</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        open_timeout</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">30.0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">        # Seconds to stay OPEN</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        window_seconds</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">60.0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">      # Rolling failure window</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        exempt_tools</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">health_check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;">  # Tools to exempt</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>States:</strong></p><ul><li><strong>CLOSED</strong>: Normal operation, calls pass through</li><li><strong>OPEN</strong>: Circuit is open, calls are blocked</li><li><strong>HALF_OPEN</strong>: Allows one probe call to test recovery</li></ul><h3 id="rate-limiting-middleware" tabindex="-1">Rate Limiting Middleware <a class="header-anchor" href="#rate-limiting-middleware" aria-label="Permalink to &quot;Rate Limiting Middleware&quot;">​</a></h3><p>Controls the rate of requests to prevent abuse.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> RateLimiterMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    RateLimiterMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        per_tool_limits</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">expensive_tool</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">    # 10 calls per minute</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">search_api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 100</span><span style="color:#676E95;font-style:italic;">        # 100 calls per minute</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        per_tenant_limits</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">tenant_a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 50</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">          # 50 calls per minute per tenant</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">tenant_b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 100</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        acquire_timeout</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">         # Fail fast if queue exceeds 2s</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        get_tenant</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">lambda</span><span style="color:#BABED8;font-style:italic;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">tenant_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">unknown</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="concurrency-limiting-middleware" tabindex="-1">Concurrency Limiting Middleware <a class="header-anchor" href="#concurrency-limiting-middleware" aria-label="Permalink to &quot;Concurrency Limiting Middleware&quot;">​</a></h3><p>Limits concurrent executions using semaphores (bulkhead pattern).</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> ConcurrencyLimiterMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    ConcurrencyLimiterMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        per_tool_limits</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">ask_llm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 8</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">            # Max 8 concurrent calls</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">search_docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 16</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        per_tenant_limits</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">tenant_a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">          # Max 10 concurrent per tenant</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        acquire_timeout</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1.5</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">         # Fail fast if queue exceeds 1.5s</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        get_tenant</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">lambda</span><span style="color:#BABED8;font-style:italic;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">tenant_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">unknown</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="prompt-injection-protection-middleware" tabindex="-1">Prompt Injection Protection Middleware <a class="header-anchor" href="#prompt-injection-protection-middleware" aria-label="Permalink to &quot;Prompt Injection Protection Middleware&quot;">​</a></h3><p>Detects and prevents prompt injection attacks.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PromptInjectionMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    PromptInjectionMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        block_on_high_risk</span><span style="color:#89DDFF;">=True,</span><span style="color:#676E95;font-style:italic;">     # Block high-risk calls</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        threshold</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0.75</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">              # Risk threshold (0-1)</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        url_allowlist</span><span style="color:#89DDFF;">=[</span><span style="color:#676E95;font-style:italic;">              # Allowed URL prefixes</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">https://docs.company.com/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#C3E88D;">https://api.company.com/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        ],</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        sanitize_on_medium</span><span style="color:#89DDFF;">=True,</span><span style="color:#676E95;font-style:italic;">     # Sanitize medium-risk calls</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        inspect_fields</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">query</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">prompt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#676E95;font-style:italic;">  # Fields to inspect</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="pii-and-secrets-redaction-middleware" tabindex="-1">PII and Secrets Redaction Middleware <a class="header-anchor" href="#pii-and-secrets-redaction-middleware" aria-label="Permalink to &quot;PII and Secrets Redaction Middleware&quot;">​</a></h3><p>Automatically redacts sensitive information from inputs and outputs.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> SecretsAndPIIMiddleware</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> RedactionStrategy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    SecretsAndPIIMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        strategy</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">RedactionStrategy</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">            mode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mask</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">             # &quot;mask&quot;, &quot;hash&quot;, or &quot;tokenize&quot;</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">            salt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">optional_salt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;">     # For hash mode</span></span>
<span class="line"><span style="color:#89DDFF;">        ),</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        allowlist_tools</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">decrypt_tool</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">  # Tools to exempt</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        allowlist_fields</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">public_info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">  # Fields to exempt</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        redact_inputs</span><span style="color:#89DDFF;">=True,</span><span style="color:#676E95;font-style:italic;">          # Redact arguments</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        redact_outputs</span><span style="color:#89DDFF;">=True</span><span style="color:#676E95;font-style:italic;">          # Redact responses</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>Redaction Modes:</strong></p><ul><li><strong>mask</strong>: <code>[REDACTED:EMAIL]</code></li><li><strong>hash</strong>: <code>[HASH:EMAIL:a1b2c3d4e5f6]</code></li><li><strong>tokenize</strong>: <code>&lt;EMAIL_1&gt;</code></li></ul><h3 id="xml-to-json-conversion-middleware" tabindex="-1">XML to JSON Conversion Middleware <a class="header-anchor" href="#xml-to-json-conversion-middleware" aria-label="Permalink to &quot;XML to JSON Conversion Middleware&quot;">​</a></h3><p>Automatically converts XML responses to JSON format.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> FormatXml2Json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FormatXml2Json</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">mcp_composer</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="policy-acl-middleware" tabindex="-1">Policy/ACL Middleware <a class="header-anchor" href="#policy-acl-middleware" aria-label="Permalink to &quot;Policy/ACL Middleware&quot;">​</a></h3><p>Enforces access control policies using various backends.</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">acl</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">policy </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PolicyMiddleware</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">middleware</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">acl</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">policy</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">file_enforcer </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> FilePolicyEnforcer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    PolicyMiddleware</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        policy_enforcer</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">FilePolicyEnforcer</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">            policy_file</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">policies/basic_policy.json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        ),</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        identity_manager</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">YourIdentityManager</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">        enable_audit_logging</span><span style="color:#89DDFF;">=True</span></span>
<span class="line"><span style="color:#89DDFF;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="middleware-best-practices" tabindex="-1">Middleware Best Practices <a class="header-anchor" href="#middleware-best-practices" aria-label="Permalink to &quot;Middleware Best Practices&quot;">​</a></h2><h3 id="_1-order-matters" tabindex="-1">1. Order Matters <a class="header-anchor" href="#_1-order-matters" aria-label="Permalink to &quot;1. Order Matters&quot;">​</a></h3><p>Middleware is executed in the order it&#39;s added. Consider the execution order:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Add authentication first</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">AuthMiddleware</span><span style="color:#89DDFF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Then rate limiting</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">RateLimiterMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Then business logic middleware</span></span>
<span class="line"><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">CustomBusinessLogicMiddleware</span><span style="color:#89DDFF;">())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2-error-handling" tabindex="-1">2. Error Handling <a class="header-anchor" href="#_2-error-handling" aria-label="Permalink to &quot;2. Error Handling&quot;">​</a></h3><p>Always handle exceptions gracefully:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    except</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;font-style:italic;"> as</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Log the error</span></span>
<span class="line"><span style="color:#BABED8;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Middleware error: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">e</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Re-raise or handle appropriately</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        raise</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-performance-considerations" tabindex="-1">3. Performance Considerations <a class="header-anchor" href="#_3-performance-considerations" aria-label="Permalink to &quot;3. Performance Considerations&quot;">​</a></h3><ul><li>Keep middleware lightweight</li><li>Use async operations when possible</li><li>Cache expensive operations</li><li>Avoid blocking operations</li></ul><h3 id="_4-configuration" tabindex="-1">4. Configuration <a class="header-anchor" href="#_4-configuration" aria-label="Permalink to &quot;4. Configuration&quot;">​</a></h3><p>Make middleware configurable:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> ConfigurableMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 enabled</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> bool</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> True,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 timeout</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> float</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 30.0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">                 max_retries</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> int</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> enabled</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> timeout</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">max_retries</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> max_retries</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-logging-and-monitoring" tabindex="-1">5. Logging and Monitoring <a class="header-anchor" href="#_5-logging-and-monitoring" aria-label="Permalink to &quot;5. Logging and Monitoring&quot;">​</a></h3><p>Add observability to your middleware:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> logging</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">core</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> LoggerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">logger </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> LoggerFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_logger</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> LoggingMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        start_time </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">        tool_name </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">&lt;unknown&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#BABED8;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Starting tool call: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            duration </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> start_time</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Tool call completed: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> in </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">duration</span><span style="color:#C792EA;">:.2f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">s&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#BABED8;"> result</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        except</span><span style="color:#FFCB6B;"> Exception</span><span style="color:#89DDFF;font-style:italic;"> as</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            duration </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> start_time</span></span>
<span class="line"><span style="color:#BABED8;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Tool call failed: </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">tool_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> after </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">duration</span><span style="color:#C792EA;">:.2f</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">s - </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">e</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            raise</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="testing-middleware" tabindex="-1">Testing Middleware <a class="header-anchor" href="#testing-middleware" aria-label="Permalink to &quot;Testing Middleware&quot;">​</a></h2><p>Test your middleware in isolation:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> pytest</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> unittest</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mock </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> AsyncMock</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> MagicMock</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">pytest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mark</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asyncio</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> test_my_middleware</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    middleware </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> MyCustomMiddleware</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">    context </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> MagicMock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">    context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">test_tool</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">param</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#BABED8;">    call_next </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> AsyncMock</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">return_value</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#BABED8;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> middleware</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    assert</span><span style="color:#BABED8;"> result </span><span style="color:#89DDFF;">==</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    call_next</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">assert_called_once_with</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="common-patterns" tabindex="-1">Common Patterns <a class="header-anchor" href="#common-patterns" aria-label="Permalink to &quot;Common Patterns&quot;">​</a></h2><h3 id="request-response-transformation" tabindex="-1">Request/Response Transformation <a class="header-anchor" href="#request-response-transformation" aria-label="Permalink to &quot;Request/Response Transformation&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Transform request</span></span>
<span class="line"><span style="color:#BABED8;">    original_args </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span></span>
<span class="line"><span style="color:#BABED8;">    context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transform_request</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">original_args</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Transform response</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transform_response</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    finally</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        # Restore original arguments</span></span>
<span class="line"><span style="color:#BABED8;">        context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">arguments</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> original_args</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="conditional-processing" tabindex="-1">Conditional Processing <a class="header-anchor" href="#conditional-processing" aria-label="Permalink to &quot;Conditional Processing&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    tool_name </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getattr</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#BABED8;"> tool_name </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">exempt_tools</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Apply middleware logic only to non-exempt tools</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">process_with_middleware</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="state-management" tabindex="-1">State Management <a class="header-anchor" href="#state-management" aria-label="Permalink to &quot;State Management&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> StatefulMiddleware</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Middleware</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#C792EA;">    def</span><span style="color:#82AAFF;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">request_count</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#BABED8;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">lock</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> asyncio</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">    </span></span>
<span class="line"><span style="color:#C792EA;">    async</span><span style="color:#C792EA;"> def</span><span style="color:#82AAFF;"> on_call_tool</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> call_next</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        async</span><span style="color:#89DDFF;font-style:italic;"> with</span><span style="color:#BABED8;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">lock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">request_count</span><span style="color:#89DDFF;"> +=</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#BABED8;">        </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#82AAFF;"> call_next</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">context</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>This guide provides the foundation for creating and using middleware in MCP Composer. For more specific examples, see the <a href="./../examples/middleware-examples.html">Middleware Examples</a> documentation.</p><p>For more details on middleware configuration, see the <a href="./middleware-configuration.html">Middleware Configuration</a></p>`,76)]))}const d=n(p,[["render",o]]);export{D as __pageData,d as default};
