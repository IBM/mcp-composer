import{_ as a,c as e,o as n,a2 as l}from"./chunks/framework.CulRYwFH.js";const b=JSON.parse('{"title":"🧹 Developer Chores for mcp-composer","description":"","frontmatter":{},"headers":[],"relativePath":"guide/development-chores.md","filePath":"guide/development-chores.md"}'),o={name:"guide/development-chores.md"};function p(r,s,t,c,i,d){return n(),e("div",null,s[0]||(s[0]=[l(`<h1 id="🧹-developer-chores-for-mcp-composer" tabindex="-1">🧹 Developer Chores for <code>mcp-composer</code> <a class="header-anchor" href="#🧹-developer-chores-for-mcp-composer" aria-label="Permalink to &quot;🧹 Developer Chores for \`mcp-composer\`&quot;">​</a></h1><p>This document outlines common developer tasks (chores) to maintain code quality, security, and consistency in the <code>mcp-composer</code> project.</p><hr><h2 id="📦-setup" tabindex="-1">📦 Setup <a class="header-anchor" href="#📦-setup" aria-label="Permalink to &quot;📦 Setup&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Recommended: use a virtual environment</span></span>
<span class="line"><span style="color:#FFCB6B;">python</span><span style="color:#C3E88D;"> -m</span><span style="color:#C3E88D;"> venv</span><span style="color:#C3E88D;"> .venv</span></span>
<span class="line"><span style="color:#82AAFF;">source</span><span style="color:#C3E88D;"> .venv/bin/activate</span><span style="color:#676E95;font-style:italic;">  # or .\\.venv\\Scripts\\activate on Windows</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install all development tools</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> -r</span><span style="color:#C3E88D;"> requirements-dev.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="🧪-run-all-chores-one-liner" tabindex="-1">🧪 Run All Chores (One-Liner) <a class="header-anchor" href="#🧪-run-all-chores-one-liner" aria-label="Permalink to &quot;🧪 Run All Chores (One-Liner)&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#C3E88D;"> chore</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="🎨-code-formatting-tool-black" tabindex="-1">🎨 Code Formatting - Tool black <a class="header-anchor" href="#🎨-code-formatting-tool-black" aria-label="Permalink to &quot;🎨 Code Formatting - Tool black&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">black</span><span style="color:#C3E88D;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="🔍-linting-tool-ruff" tabindex="-1">🔍 Linting - Tool: Ruff <a class="header-anchor" href="#🔍-linting-tool-ruff" aria-label="Permalink to &quot;🔍 Linting - Tool: Ruff&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ruff</span><span style="color:#C3E88D;"> check</span><span style="color:#C3E88D;"> src/</span><span style="color:#C3E88D;"> tests/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="to-auto-fix-issues" tabindex="-1">To auto-fix issues: <a class="header-anchor" href="#to-auto-fix-issues" aria-label="Permalink to &quot;To auto-fix issues:&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ruff</span><span style="color:#C3E88D;"> check</span><span style="color:#C3E88D;"> src/</span><span style="color:#C3E88D;"> tests/</span><span style="color:#C3E88D;"> --fix</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>🧠 Type Checking - Tool: mypy</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">mypy</span><span style="color:#C3E88D;"> src/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="📊-test-coverage-tool-pytest-coverage-py" tabindex="-1">📊 Test Coverage - Tool: pytest + coverage.py <a class="header-anchor" href="#📊-test-coverage-tool-pytest-coverage-py" aria-label="Permalink to &quot;📊 Test Coverage - Tool: pytest + coverage.py&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Clean old data</span></span>
<span class="line"><span style="color:#FFCB6B;">coverage</span><span style="color:#C3E88D;"> erase</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Run tests and collect coverage</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#BABED8;"> PYTHONPATH</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">src</span></span>
<span class="line"><span style="color:#FFCB6B;">coverage</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> --source=mcp_composer</span><span style="color:#C3E88D;"> -m</span><span style="color:#C3E88D;"> pytest</span><span style="color:#C3E88D;"> test/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># View coverage in terminal</span></span>
<span class="line"><span style="color:#FFCB6B;">coverage</span><span style="color:#C3E88D;"> report</span><span style="color:#C3E88D;"> -m</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Generate HTML report</span></span>
<span class="line"><span style="color:#FFCB6B;">coverage</span><span style="color:#C3E88D;"> html</span></span>
<span class="line"><span style="color:#FFCB6B;">open</span><span style="color:#C3E88D;"> htmlcov/index.html</span><span style="color:#676E95;font-style:italic;">  # Use \`xdg-open\` on Linux</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="🧪-run-tests" tabindex="-1">🧪 Run Tests <a class="header-anchor" href="#🧪-run-tests" aria-label="Permalink to &quot;🧪 Run Tests&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#C3E88D;"> test/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="🧼-clean-all-generated-files" tabindex="-1">🧼 Clean All Generated Files <a class="header-anchor" href="#🧼-clean-all-generated-files" aria-label="Permalink to &quot;🧼 Clean All Generated Files&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#C3E88D;"> -rf</span><span style="color:#C3E88D;"> .coverage</span><span style="color:#C3E88D;"> htmlcov</span><span style="color:#C3E88D;"> .pytest_cache</span><span style="color:#C3E88D;"> .mypy_cache</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="🔄-pre-commit-hooks-optional" tabindex="-1">🔄 Pre-Commit Hooks (Optional) <a class="header-anchor" href="#🔄-pre-commit-hooks-optional" aria-label="Permalink to &quot;🔄 Pre-Commit Hooks (Optional)&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pre-commit</span><span style="color:#C3E88D;"> install</span></span>
<span class="line"><span style="color:#FFCB6B;">pre-commit</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> --all-files</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,23)]))}const m=a(o,[["render",p]]);export{b as __pageData,m as default};
