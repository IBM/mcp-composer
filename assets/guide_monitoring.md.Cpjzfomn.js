import{_ as n,c as a,o as e,a2 as l}from"./chunks/framework.CulRYwFH.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/monitoring.md","filePath":"guide/monitoring.md"}'),o={name:"guide/monitoring.md"};function p(t,s,r,c,i,d){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="observability-with-middleware-and-opentelemetry" tabindex="-1">Observability with Middleware and OpenTelemetry <a class="header-anchor" href="#observability-with-middleware-and-opentelemetry" aria-label="Permalink to &quot;Observability with Middleware and OpenTelemetry&quot;">​</a></h2><p>This project supports OpenTelemetry-based tracing and metrics. Tracing and metrics are controlled via <code>pyproject.toml</code> defaults and can be overridden with environment variables.</p><h3 id="_1-install-tracing-metrics-dependencies" tabindex="-1">1) Install tracing/metrics dependencies <a class="header-anchor" href="#_1-install-tracing-metrics-dependencies" aria-label="Permalink to &quot;1) Install tracing/metrics dependencies&quot;">​</a></h3><p>If you plan to enable tracing/metrics, install the optional extras defined in <code>pyproject.toml</code>:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> -e</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">.[tracing]</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-configure-via-pyproject-toml" tabindex="-1">2) Configure via <code>pyproject.toml</code> <a class="header-anchor" href="#_2-configure-via-pyproject-toml" aria-label="Permalink to &quot;2) Configure via \`pyproject.toml\`&quot;">​</a></h3><p>Defaults live under <code>[tool.mcp_composer]</code> and are read by <code>src/mcp_composer/features/config.py</code>.</p><div class="language-toml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#BABED8;">.</span><span style="color:#FFCB6B;">mcp_composer</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#BABED8;">tracing_enabled </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#BABED8;">tracing_protocol </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">http</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;">   # &quot;http&quot; | &quot;grpc&quot;</span></span>
<span class="line"><span style="color:#BABED8;">tracing_endpoint </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">http://localhost:4318</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">service_name </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">mcp-composer</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">environment </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>You can override these with environment variables (see below).</p><h3 id="_3-environment-variables" tabindex="-1">3) Environment variables <a class="header-anchor" href="#_3-environment-variables" aria-label="Permalink to &quot;3) Environment variables&quot;">​</a></h3><p>Tracing (used by <code>init_tracing_if_enabled()</code> in <code>src/mcp_composer/features/tracing_setup.py</code>):</p><ul><li><code>MCP_TRACING_ENABLED</code>: &quot;true&quot;/&quot;false&quot; to toggle tracing</li><li><code>MCP_TRACING_PROTOCOL</code>: <code>http</code> or <code>grpc</code></li><li><code>OTEL_EXPORTER_OTLP_ENDPOINT</code>: collector endpoint (e.g., <code>http://localhost:4318</code>)</li><li><code>OTEL_SERVICE_NAME</code>: service name for traces/metrics</li><li><code>OTEL_RESOURCE_ATTRIBUTES</code>: comma-separated resource attrs, e.g. <code>deployment.environment=dev,team=platform</code></li></ul><p>Metrics (used by <code>init_metrics_if_enabled()</code> in <code>src/mcp_composer/features/tracing_setup.py</code>):</p><ul><li><code>MCP_METRICS_ENABLED</code>: &quot;true&quot;/&quot;false&quot; to toggle metrics</li><li><code>OTEL_EXPORTER_OTLP_METRICS_ENDPOINT</code>: metrics endpoint; falls back to <code>OTEL_EXPORTER_OTLP_ENDPOINT</code></li><li><code>OTEL_METRIC_EXPORT_INTERVAL</code>: export interval in ms (default 60000)</li><li><code>MCP_ENV</code>: used in resource attrs when exporting metrics</li></ul><p>Note: When using HTTP exporters, the collector endpoints must include the correct paths:</p><ul><li>Traces: <code>.../v1/traces</code></li><li>Metrics: <code>.../v1/metrics</code></li></ul><p><code>tracing_setup.py</code> automatically appends these paths when needed.</p><h3 id="_4-initialize-in-your-application" tabindex="-1">4) Initialize in your application <a class="header-anchor" href="#_4-initialize-in-your-application" aria-label="Permalink to &quot;4) Initialize in your application&quot;">​</a></h3><p>At process startup, enable tracing/metrics if configured, and register instruments:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">features</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">tracing_setup </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> init_tracing_if_enabled</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> init_metrics_if_enabled</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">features</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">opentelemetry_metrics_registry </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> init_instruments</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> tool_calls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Enable tracing (no-op if disabled)</span></span>
<span class="line"><span style="color:#82AAFF;">init_tracing_if_enabled</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Enable metrics and register standard instruments</span></span>
<span class="line"><span style="color:#BABED8;">meter </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> init_metrics_if_enabled</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">init_instruments</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">meter</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Example usage of a metric (if enabled)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> tool_calls </span><span style="color:#89DDFF;">is</span><span style="color:#89DDFF;"> not</span><span style="color:#89DDFF;"> None:</span></span>
<span class="line"><span style="color:#BABED8;">    tool_calls</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tool</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_5-adding-new-metrics" tabindex="-1">5) Adding new metrics <a class="header-anchor" href="#_5-adding-new-metrics" aria-label="Permalink to &quot;5) Adding new metrics&quot;">​</a></h3><p>Standard instruments are defined in <code>src/mcp_composer/features/opentelemetry_metrics_registry.py</code> (<code>tool_calls</code>, <code>tool_errors</code>, <code>tool_duration</code>, <code>in_bytes</code>, <code>out_bytes</code>). To add a new metric:</p><ol><li>Define it inside <code>init_instruments(meter)</code> in <code>opentelemetry_metrics_registry.py</code>.</li><li>Use it in your code after <code>init_instruments(meter)</code> has been called at startup.</li></ol><p>Example addition in the registry:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">custom_counter </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> meter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_counter</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mcp.custom.events</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    unit</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;font-style:italic;">    description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Custom domain events</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Then record metrics where appropriate:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> mcp_composer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">features </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> opentelemetry_metrics_registry </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> metrics</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">custom_counter</span><span style="color:#89DDFF;"> is</span><span style="color:#89DDFF;"> not</span><span style="color:#89DDFF;"> None:</span></span>
<span class="line"><span style="color:#BABED8;">    metrics</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">custom_counter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">cache_miss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_6-run-the-opentelemetry-collector" tabindex="-1">6) Run the OpenTelemetry Collector <a class="header-anchor" href="#_6-run-the-opentelemetry-collector" aria-label="Permalink to &quot;6) Run the OpenTelemetry Collector&quot;">​</a></h3><p>Update the configuration in <code>config/otel-collector-config.yaml</code> if needed.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> --rm</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -p</span><span style="color:#C3E88D;"> 4318:4318</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 4317:4317</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -v</span><span style="color:#89DDFF;"> &quot;$(</span><span style="color:#82AAFF;">pwd</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">/config/otel-collector-config.yaml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:/etc/otelcol/config.yaml</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  otel/opentelemetry-collector:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Or:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">podman</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> --rm</span><span style="color:#C3E88D;"> --name</span><span style="color:#C3E88D;"> otel-collector</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 4318:4318</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 55681:55681</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -v</span><span style="color:#89DDFF;"> &quot;$(</span><span style="color:#82AAFF;">pwd</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">/config/otel-collector-config.yaml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:/etc/otelcol/config.yaml:Z</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  otel/opentelemetry-collector:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_7-run-jaeger-ui-zipkin-ingest-enabled" tabindex="-1">7) Run Jaeger UI (Zipkin ingest enabled) <a class="header-anchor" href="#_7-run-jaeger-ui-zipkin-ingest-enabled" aria-label="Permalink to &quot;7) Run Jaeger UI (Zipkin ingest enabled)&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> --name</span><span style="color:#C3E88D;"> jaeger</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -e</span><span style="color:#C3E88D;"> COLLECTOR_ZIPKIN_HOST_PORT=:9411</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -p</span><span style="color:#C3E88D;"> 9411:9411</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -p</span><span style="color:#C3E88D;"> 16686:16686</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  jaegertracing/all-in-one:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Or:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">podman</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> --name</span><span style="color:#C3E88D;"> jaeger</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -e</span><span style="color:#C3E88D;"> COLLECTOR_ZIPKIN_HOST_PORT=:9411</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -p</span><span style="color:#C3E88D;"> 9411:9411</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  -p</span><span style="color:#C3E88D;"> 16686:16686</span><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  jaegertracing/all-in-one:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Open Jaeger UI at <a href="http://localhost:16686" target="_blank" rel="noreferrer">http://localhost:16686</a> and search for <code>service.name = mcp-composer</code> (or your configured <code>OTEL_SERVICE_NAME</code>).</p><img width="1696" alt="image" src="https://github.com/ibm/mcp-composer/assets/3014/0c1e551b-8073-4b6c-8b61-644ee728b64f">`,38)]))}const m=n(o,[["render",p]]);export{D as __pageData,m as default};
